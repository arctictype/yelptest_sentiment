library(tm) 
library(stringr)
library(readr)
library(dplyr)
library(tidyr)
library(tidytext)
library(tibble)


#load text mining library
#read txt .... Yelp_SDG.txt



# Read in the data and create a bag of words for each goal
sdg <- read.table("~/Documents/Yelp_SDG.txt",sep="\n")
sdg <- str_split(sdg$V1,"\\s")
names(sdg) <- sapply(sdg, `[[`, 1)
sdg <- lapply(sdg, `[`, -1)

# create an unnested vector with all the words

sdg <- read.table("~/Documents/Yelp_SDG.txt",sep="\n", as.is = TRUE) 
sdg <- str_split(sdg$V1,"\\s", n=2)
sdg <- do.call(rbind,sdg)
sdg <- as.data.frame(sdg, stringsAsFactors = FALSE)



class(sdg_text)


sdg_text <- sdg %>% 
  transmute(V1, text=V2) %>% 
  unnest_tokens(word, text) %>% 
  anti_join(stop_words) %>%
  #mutate(word = wordStem(word)) %>% 
  filter(!str_detect(word,"^[0-9]|^[_]")) %>% 
  count(word,sort = TRUE)  %>% 
  ungroup()

sdg_words <- sdg_text %>% 
  count(V1, word, sort = TRUE) %>% 
  ungroup

total_words <- sdg_words %>% 
  group_by(V1) %>% 
  summarize(total = sum(n))

sdg_words<- left_join(sdg_words, total_words)


sdg_words

sdg_words <- sdg_words %>% 
  bind_tf_idf(word, V1, n)


sdg_words
sdg_words %>% 
  select(-total) %>% 
  arrange(desc(tf_idf))


sdg_words_rank <- sdg_words %>%
  select(word, tf_idf) %>% 
  anti_join(stop_words) %>%
  group_by(word) %>% 
  mutate(count = n()) %>% 
  top_n(1,tf_idf) %>% 
  filter(count >1)

sdg_words %>% 
  count(word, sort = TRUE)


createWordCloud = function(train)
{
  train %>%
    unnest_tokens(word, V2) %>%
    filter(!word %in% stop_words$word) %>%
    count(word,sort = TRUE) %>%
    ungroup()  %>%
    head(30) %>%
    
    with(wordcloud(word, n, scale = c(400, 22),max.words = 30,colors=brewer.pal(8, "Dark2")))
}

createWordCloud(sdg)



sdg_words <- sdg_text %>%
  bind_tf_idf(word, n)

sdg_words <- sdg_tex t%>% 
  #strsplit(sdg, "[[:space:]]")
  #mutate(sdg = sapply(sdg, `[[`, 1))
  #bind_tf_idf(word, n) %>% 
  arrange(desc(tf_idf)) %>%
  mutate(word = factor(word, levels = rev(unique(word)))) %>% 
  top_n(15) %>% 
  ungroup()

ggplot(aes(word, tf_idf, fill = business_id)) +
  geom_col(show.legend = FALSE) +
  labs(x = NULL, y = "tf-idf") +
  facet_wrap(~business_id, ncol = 2, scales = "free") +
  coord_flip()
